VIM="nvim"
export VISUAL="$VIM"
export EDITOR="$VISUAL"

autoload -Uz compinit
compinit

export STARSHIP_CONFIG=~/.config/starship/starship.toml

export CLI_COLOR=1
export LSCOLORS=exfxbxdxcxegedabagacad
export TMUX_CONF=~/.config/tmux/tmux.conf

# source $(brew --prefix)/opt/zsh-vi-mode/share/zsh-vi-mode/zsh-vi-mode.plugin.zsh

function sesh-sessions() {
  {
    exec </dev/tty
    exec <&1
    local session
    session=$(sesh list -t -c | sesh list -i | gum filter --limit 1 --no-sort --no-strip-ansi --fuzzy --placeholder 'Pick a sesh' --height 50 --prompt='âš¡')
    zle reset-prompt > /dev/null 2>&1 || true
    [[ -z "$session" ]] && return
    sesh connect $session
  }
}

zle     -N             sesh-sessions
bindkey -M emacs '^f' sesh-sessions
bindkey -M vicmd '^f' sesh-sessions
bindkey -M viins '^f' sesh-sessions

makes() {
        local current_dir=$(pwd)

        cd ~/code/january/
        make "$@"

        local exit_code=$?

        cd $current_dir

        return $exit_code
}


#Aliases

alias ls='ls -G'
alias la='ls -laG'
alias ll='ls -lG'

alias vi=$VIM
alias vim=$VIM

alias work='cd ~/code/january'
alias web='cd ~/code/january/frontend'
alias ap='cd ~/code/january/frontend/AgentPortal'
alias gopy='cd ~/code/january/debtsy'
alias conf='cd ~/.config'
alias godbt='cd ~/code/dbt'
alias logs='cd ~/.local/share/'

alias gpull='git pull origin $(git rev-parse --abbrev-ref HEAD)'
alias gpo='git push origin $(git rev-parse --abbrev-ref HEAD)'

eval "$(zoxide init zsh)"

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


source <(fzf --zsh)
#compdef gt
###-begin-gt-completions-###
#
# yargs command completion script
#
# Installation: gt completion >> ~/.zshrc
#    or gt completion >> ~/.zprofile on OSX.
#
_gt_yargs_completions()
{
  local reply
  local si=$IFS
  IFS=$'
' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" gt --get-yargs-completions "${words[@]}"))
  IFS=$si
  _describe 'values' reply
}
compdef _gt_yargs_completions gt
###-end-gt-completions-###




