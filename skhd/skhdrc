# Create and destroy spaces: ralt - [c, d]
shift - ralt - c : yabai -m space --create
ralt - d : yabai -m space --destroy
## Navigation (lalt - ...)
# Space Navigation (four spaces per display): lalt - {1, 2, 3, 4}
ralt - q : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[1] ]] && yabai -m space --focus $SPACES[1]
ralt - w : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[2] ]] && yabai -m space --focus $SPACES[2]
ralt - e : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[3] ]] && yabai -m space --focus $SPACES[3]
ralt - r : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[4] ]] && yabai -m space --focus $SPACES[4]
ralt - t : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[5] ]] && yabai -m space --focus $SPACES[5]

# lalt - p : yabai -m space --focus prev || yabai -m space --focus last
# lalt - n : yabai -m space --focus next || yabai -m space --focus first
#
# Window Navigation (through display borders): 
# cycle through all windows sorted by: coordinates -> space index -> display index
lalt - p    : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
# cycle through all visible windows sorted by: coordinates -> display index
lalt - n    : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"

# Extended Window Navigation: lalt - {h, ä}
# lalt -    h : yabai -m window --focus first
# lalt - 0x27 : yabai -m window --focus  last

# Float / Unfloat window: lalt - space
# lalt - space : yabai -m window --toggle float; sketchybar --trigger window_focus

# Make window zoom to fullscreen: shift + lalt - f
# ralt - f : yabai -m window --toggle zoom-fullscreen; sketchybar --trigger window_focus

# Make window zoom to parent node: lalt - f 
# ralt + shift - f : yabai -m window --toggle zoom-parent; sketchybar --trigger window_focus

## Window Movement (shift + lalt - ...)
# Moving windows in spaces: shift + lalt - {j, k, l, ö}
# shift + lalt - h : yabai -m window --warp west || $(yabai -m window --display west && yabai -m display --focus west && yabai -m window --warp last) || yabai -m window --move rel:-10:0
# shift + lalt - j : yabai -m window --warp south || $(yabai -m window --display south && yabai -m display --focus south) || yabai -m window --move rel:0:10
# shift + lalt - k : yabai -m window --warp north || $(yabai -m window --display north && yabai -m display --focus north) || yabai -m window --move rel:0:-10
# shift + lalt - l : yabai -m window --warp east || $(yabai -m window --display east && yabai -m display --focus east && yabai -m window --warp first) || yabai -m window --move rel:10:0

# Toggle split orientation of the selected windows node: shift + lalt - s
# shift + ralt - s : yabai -m window --toggle split

# Moving windows between spaces:
meh - q : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[1] ]] \
                  && yabai -m window --space $SPACES[1] && yabai -m space --focus $SPACES[1]

meh - w : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[2] ]] \
                  && yabai -m window --space $SPACES[2] && yabai -m space --focus $SPACES[2]

meh - e : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[3] ]] \
                  && yabai -m window --space $SPACES[3] && yabai -m space --focus $SPACES[3]

meh - r : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[4] ]] \
                  && yabai -m window --space $SPACES[4] && yabai -m space --focus $SPACES[4]

meh - t : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[5] ]] \
                  && yabai -m window --space $SPACES[5] && yabai -m space --focus $SPACES[5]

# Move window between spaces (Dispay spaces are separate): meh - {q, w, e, r, t, y, u, i}
# meh - q : yabai -m window --space 1 && yabai -m space --focus 1
# meh - w : yabai -m window --space 2 && yabai -m space --focus 2
# meh - e : yabai -m window --space 3 && yabai -m space --focus 3
# meh - r : yabai -m window --space 4 && yabai -m space --focus 4
# meh - t : yabai -m window --space 5 && yabai -m space --focus 5
# meh - y : yabai -m window --space 6 && yabai -m space --focus 6
# meh - u : yabai -m window --space 7 && yabai -m space --focus 7
# meh - i : yabai -m window --space 8 && yabai -m space --focus 8

# Moving windows between spaces: meh - {n, p}
meh - p : yabai -m window --space prev && yabai -m space --focus prev
meh - n : yabai -m window --space next && yabai -m space --focus next

# Moving windows between displays: meh - {h, j, k, l}
meh - h : yabai -m window --display west && yabai -m display --focus west
meh - j : yabai -m window --display south && yabai -m display --focus south
meh - k : yabai -m window --display north && yabai -m display --focus north
meh - l : yabai -m window --display east && yabai -m display --focus east

# Mirror Space on X and Y Axis: shift + lalt - {x, y}
# shift + ralt - x : yabai -m space --mirror x-axis
# shift + lalt - y : yabai -m space --mirror y-axis

## Stacks (shift + ctrl - ...)
# Add the active window to the window or stack to the {direction}: shift + ctrl - {j, k, l, ö}
# shift + ctrl - h    : yabai -m window  west --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus
# shift + ctrl - j    : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus
# shift + ctrl - k    : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus
# shift + ctrl - l    : yabai -m window  east --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus

# Stack Navigation: shift + ctrl - {n, p}
# shift + ctrl - n : yabai -m window --focus stack.next
# shift + ctrl - p : yabai -m window --focus stack.prev

## Resize (ctrl + lalt - ...)
# Resize windows: ctrl + lalt - {j, k, l, ö}
# ctrl + lalt - h    : yabai -m window --resize right:-100:0 || yabai -m window --resize left:-100:0
# ctrl + lalt - j    : yabai -m window --resize bottom:0:100 || yabai -m window --resize top:0:100
# ctrl + lalt - k    : yabai -m window --resize bottom:0:-100 || yabai -m window --resize top:0:-100
# ctrl + lalt - l    : yabai -m window --resize right:100:0 || yabai -m window --resize left:100:0

# Equalize size of windows: ctrl + lalt - e
# ctrl + ralt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace: ctrl + lalt - g
# ctrl + ralt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Enable / Disable gaps in current workspace: ctrl + lalt - g
# ctrl + ralt - b : yabai -m config window_border off 
# shift + ctrl + ralt - b : yabai -m config window_border on

## Insertion (shift + ctrl + lalt - ...)
# Set insertion point for focused container: shift + ctrl + lalt - {j, k, l, ö, s}
# meh - h : yabai -m window --insert west
# meh - j : yabai -m window --insert south
# meh - k : yabai -m window --insert north
# meh - l : yabai -m window --insert east
# meh - s : yabai -m window --insert stack

## Misc
# Open new Alacritty window
alt - a : alacritty msg create-window

# New window in hor./ vert. splits for all applications with yabai
ralt - s : yabai -m window --insert east;  skhd -k "cmd - n"
ralt - v : yabai -m window --insert south; skhd -k "cmd - n"

# Toggle sketchybar
shift + lalt - space : sketchybar --bar hidden=toggle
# shift + lalt - r : sketchybar --remove '/.*/' && sh -c 'export CONFIG_DIR=$HOME/.config/sketchybar && $CONFIG_DIR/sketchybarrc'
